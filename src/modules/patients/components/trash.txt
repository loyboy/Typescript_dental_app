  <Panel
          isOpen={this.state.openAppointment}
          type={PanelType.medium}
          customWidth={"100%"}
          closeButtonAriaLabel="Close"
          isLightDismiss={true}
          onDismiss={() => {
            this.setState({ openInsurance: false });
          }}
          onRenderNavigation={() => {
            return (
              <Row className="panel-heading">
                <Col span={22}>
                  <ProfileComponent
                    name={this.props.patient!.name}
                    secondaryElement={<div>{text("Patient Appointment")}</div>}
                    size={3}
                  />
                </Col>
                <Col span={2} className="close">
                  <IconButton
                    iconProps={{ iconName: "cancel" }}
                    onClick={() => {
                      this.setState({ openAppointment: false });
                    }}
                  />
                </Col>
              </Row>
            );
          }}
        >
           <AsyncComponent
                key=""
                loader={async () => {
                  const Component = (await import("../../insurance/components/page.insurance")).Insurances;
                  return <Component />;
                }}
              />
        </Panel>



              {/*
      <div>
        <SectionComponent title={text(`General Diagnosis`)}>
          <Label> {text(`Diagnosis`)} </Label>
         
          <TextField
            disabled={!this.canEdit}
            min={0}
            max={180}
            value={this.props.implant.title}
            onChange={(ev, v) => {
              this.props.implant.title = v!;
            }}
            type="text"
          />

          <br />

          <Label> {text(`Lab Investigation`)} </Label>
          <Row gutter={6}>
            <Col sm={12}>
              <div className="birth">
               
              </div>
            </Col>
          </Row>
 
          <br />

          <Row gutter={6}>
            <Col sm={24}>
              <div className="birth">
                <TextField
                  label={text("Notes ")}
                  multiline={true}
                  value={this.props.implant.notes}
                  onChange={(ev, val) =>
                    ( this.props.implant.notes = val! )
                  }                  
                  rows={5}                 
                  disabled={!this.canEdit}
                />
              </div>
            </Col>
          </Row>
     
        </SectionComponent>

        <SectionComponent title={text(`Medications`)}>

        <Row gutter={6}>
            <Col sm={24}>
        
                {this.props.implant!.drugGroup &&
                  this.props.implant!.drugGroup.map((item, i) => {
                    if (i <= 0) {
                      var title = ["Drug", "Dose", "Duration"];
                      return (
                        <MedicationDiv
                          key={i}
                          index={i}
                          implant={this.props.implant!}
                          canEdit={!this.canEdit}
                          title={title}
                        />
                      );
                    } else {
                      var title = ["", "", ""];
                      return (
                        <MedicationDiv
                        key={i}
                        index={i}
                        implant={this.props.implant!}
                        canEdit={!this.canEdit}
                        title={title}
                      />
                      );
                    }
                  })}
            </Col>
          </Row>

          <Row gutter={6}> 
          <Col sm={24}>
            
          <DefaultButton
                  text="Add New Implant"
                  allowDisabledFocus
                  onClick={(e) => {
                    var ddoi = { drug: "", dose: "", duration: 0 };
                    this.props.implant!.drugGroup.push(ddoi);
                  }}
                />
            </Col>
          </Row>

        </SectionComponent>

    
          <Row gutter={6}>
            <Col sm={12} style={{ display: 'inline' }}>
              <div className="birth">
              <Label> {text(`Technique`)} </Label>
         
              <TextField
                disabled={!this.canEdit}
               
                value={this.props.implant.impl_technique}
                onChange={(ev, v) => {
                  this.props.implant.impl_technique = v!;
                }}
                type="text"
              />
              </div>
            </Col>

            <Col sm={12} style={{ display: 'inline' }}>
              <div className="birth">
              <Label> {text(`Area`)} </Label>
         
              <TextField
                disabled={!this.canEdit}
               
                value={this.props.implant.impl_area}
                onChange={(ev, v) => {
                  this.props.implant.impl_area = v!;
                }}
                type="text"
              />
              </div>
            </Col>
          </Row>

          <br/>

          <Row gutter={6}>
            <Col sm={12} style={{ display: 'inline' }}>
              <div className="birth">
              <Label> {text(`Type`)} </Label>
         
              <Dropdown
                                options={["v1", "v2",  "v3",  "v4",  "v5"].map((x) => ({
                                  key: x,
                                  text: x,
                                }))}
                                selectedKey={this.props.implant.impl_type}
                                onChange={(ev, val) => {
                                  if (val) {
                                    this.props.implant.impl_type = val.text!;
                                  }
                                }} 
                  />
              </div>
            </Col>

            <Col sm={12} style={{ display: 'inline' }}>
              <div className="birth">
              <Label> {text(`Length (mm)`)} </Label>
         
              <TextField
                disabled={!this.canEdit}               
                value={this.props.implant.impl_length}
                onChange={(ev, v) => {
                  this.props.implant.impl_length = v!;
                }}
                type="number"
              />
              </div>
            </Col>
          </Row>

          <Row gutter={6}>
            <Col sm={12} style={{ display: 'inline' }}>
              <div className="birth">
              <Label> {text(`Diameter (mm)`)} </Label>
         
              <TextField
                disabled={!this.canEdit}
               
                value={this.props.implant.impl_diameter}
                onChange={(ev, v) => {
                  this.props.implant.impl_diameter = v!;
                }}
                type="text"
              />
              </div>
            </Col>

            <Col sm={12} style={{ display: 'inline' }}>
              <div className="birth">
              <Label> {text(`Bone graft`)} </Label>
         
                  <Dropdown
                                options={["None", "Allograft", "Xenograft", "Autograft"].map((x) => ({
                                  key: x,
                                  text: x,
                                }))}
                                selectedKey={this.props.implant.impl_bonegraft}
                                onChange={(ev, val) => {
                                  if (val) {
                                    this.props.implant.impl_bonegraft = val.text!;
                                  }
                                }} 
                  />
              </div>
            </Col>
          </Row>

          <Row gutter={6}>
            <Col sm={12} style={{ display: 'inline' }}>
              <div className="birth">
              <Label> {text(`Diameter (mm)`)} </Label>
         
              <TextField
                disabled={!this.canEdit}
               
                value={this.props.implant.impl_diameter}
                onChange={(ev, v) => {
                  this.props.implant.impl_diameter = v!;
                }}
                type="text"
              />
              </div>
            </Col>

            <Col sm={12} style={{ display: 'inline' }}>
              <div className="birth">
              <Label> {text(`Bone graft Quantity`)} </Label>
         
              <TextField
                disabled={!this.canEdit}
               
                value={this.props.implant.impl_bonegraftq}
                onChange={(ev, v) => {
                  this.props.implant.impl_bonegraftq = v!;
                }}
                type="number"
              />

              </div>
            </Col>
          </Row>

          <Row gutter={6}>
            <Col sm={12} style={{ display: 'inline' }}>
              <div className="birth">
              <Label> {text(`Form`)} </Label>
         
              <Dropdown
                                options={["Powder", "Block"].map((x) => ({
                                  key: x,
                                  text: x,
                                }))}
                                selectedKey={this.props.implant.impl_form}
                                onChange={(ev, val) => {
                                  if (val) {
                                    this.props.implant.impl_form = val.text!;
                                  }
                                }} 
              />
              </div>
            </Col>

            <Col sm={12} style={{ display: 'inline' }}>
              <div className="birth">
              <Label> {text(`Bone graft Quantity`)} </Label>
         
              <TextField
                disabled={!this.canEdit}               
                value={this.props.implant.impl_bonegraftq}
                onChange={(ev, v) => {
                  this.props.implant.impl_bonegraftq = v!;
                }}
                type="number"
              />

              </div>
            </Col>
          </Row>

          <Row gutter={6}>
            <Col sm={12} style={{ display: 'inline' }}>
              <div className="birth">
              <Label> {text(`Membrane`)} </Label>
         
              <TextField
                disabled={!this.canEdit}               
                value={this.props.implant.impl_membrane}
                onChange={(ev, v) => {
                  this.props.implant.impl_membrane = v!;
                }}
                type="text"
              />

              </div>
            </Col>         
          </Row>

          <Row gutter={6}>
            <Col sm={12} style={{ display: 'inline' }}>
              <div className="birth">
              <Label> {text(`Notes`)} </Label>
         
              <TextField
                disabled={!this.canEdit}               
                value={this.props.implant.impl_notes}
                onChange={(ev, v) => {
                  this.props.implant.impl_notes = v!;
                }}
                type="text"
                multiline={true}
                rows={5}
              />

              </div>
            </Col>         
          </Row>



        </SectionComponent>

        <SectionComponent title={text(`Prosthetics`)}>

         <Row gutter={6}>
            <Col sm={24} style={{ display: 'inline' }}>
              <div className="birth">
                <Label> {text(`Abutment Type`)} </Label>
          
                <TextField
                  disabled={!this.canEdit}               
                  value={this.props.implant.pros_abutment}
                  onChange={(ev, v) => {
                    this.props.implant.pros_abutment = v!;
                  }}
                  type="text"
                />
              </div>
            </Col>         
          </Row>

          <Row gutter={6}>
            <Col sm={12} style={{ display: 'inline' }}>
              <div className="birth">
                <Label> {text(`Height (mm)`)} </Label>
          
                <TextField
                  disabled={!this.canEdit}               
                  value={this.props.implant.pros_height}
                  onChange={(ev, v) => {
                    this.props.implant.pros_height = v!;
                  }}
                  type="number"
                />
              </div>
            </Col> 

             <Col sm={12} style={{ display: 'inline' }}>
              <div className="birth">
                <Label> {text(`Diameter (mm)`)} </Label>
          
                <TextField
                  disabled={!this.canEdit}               
                  value={this.props.implant.pros_weight}
                  onChange={(ev, v) => {
                    this.props.implant.pros_weight = v!;
                  }}
                  type="number"
                />
              </div>
            </Col> 

          </Row>

          <Row gutter={6}>
            <Col sm={12} style={{ display: 'inline' }}>
              <div className="birth">
                <Label> {text(`Angulation`)} </Label>
          
                <Dropdown
                                options={["straight", "angled"].map((x) => ({
                                  key: x,
                                  text: x,
                                }))}
                                selectedKey={this.props.implant.pros_angulation}
                                onChange={(ev, val) => {
                                  if (val) {
                                    this.props.implant.pros_angulation = val.text!;
                                  }
                                }} 
                  />

              </div>
            </Col> 

             <Col sm={12} style={{ display: 'inline' }}>
              <div className="birth">
                <Label> {text(`Crown`)} </Label>
          
                <Dropdown
                                options={["scraw retained", "cement retained"].map((x) => ({
                                  key: x,
                                  text: x,
                                }))}
                                selectedKey={this.props.implant.pros_crown}
                                onChange={(ev, val) => {
                                  if (val) {
                                    this.props.implant.pros_crown = val.text!;
                                  }
                                }} 
                  />

              </div>
            </Col> 

          </Row>

          <Row gutter={6}>
            <Col sm={12} style={{ display: 'inline' }}>
              <div className="birth">
                <Label> {text(`Crown Type`)} </Label>
          
                <Dropdown
                                options={["PFM", "ZIrcon", "E-Max", "All Ceramic"].map((x) => ({
                                  key: x,
                                  text: x,
                                }))}
                                selectedKey={this.props.implant.pros_crowntype}
                                onChange={(ev, val) => {
                                  if (val) {
                                    this.props.implant.pros_crowntype = val.text!;
                                  }
                                }} 
                  />

              </div>
            </Col> 

             <Col sm={12} style={{ display: 'inline' }}>
              <div className="birth">
                <Label> {text(`Shade`)} </Label>
          
                <TextField
                  disabled={!this.canEdit}               
                  value={this.props.implant.pros_shade}
                  onChange={(ev, v) => {
                    this.props.implant.pros_shade = v!;
                  }}
                  type="text"
                />

              </div>
            </Col> 

          </Row>

          <Row gutter={6}>
            <Col sm={24}>
              <div className="birth">
              <Label> {text(`Notes`)} </Label>
                <TextField
                  label={text("Notes")}
                  multiline={true}
                  value={this.props.implant.pros_notes}
                  onChange={(ev, val) =>
                    ( this.props.implant.pros_notes = val! )
                  }                  
                  rows={5}                 
                  disabled={!this.canEdit}
                />
              </div>
            </Col>
          </Row>

        </SectionComponent>

        <SectionComponent title={text(`Problems`)}>

          <Row gutter={6}>
            <Col sm={12}>
              <div className="birth">
              <Label> {text(`Concerns`)} </Label>
      
              </div>
            </Col>

            <Col sm={12}>
              <div className="birth">
              <Label> {text(`Concerns`)} </Label>
              <TextField
                  label={text("Notes")}
                  multiline={true}
                  value={this.props.implant.problems_others}
                  onChange={(ev, val) =>
                    ( this.props.implant.problems_others = val! )
                  }                  
                  rows={5}                 
                  disabled={!this.canEdit}
                />
              </div>
            </Col>

          </Row>
           </SectionComponent>
      </div>
                */}



          





            
      
      

                   